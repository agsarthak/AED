/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CarOwnerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.CarOwnerOrganization;
import Business.Organization.CarRenterOrganization;
import Business.Organization.Organization;
import Business.RideSharing.CarListing;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RideShareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sarthak
 */
public class CarOwnerWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private CarOwnerOrganization organization;
    private Enterprise enterprise;
//    private RideShareWorkRequest rideShareWorkRequest ;

    public CarOwnerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, CarOwnerOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
//        request = new RideShareWorkRequest();
        populateTable();
        textTotalMoney.setText(Integer.toString(totalMoney()));
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tableOwnerDashboard.getModel();
        model.setRowCount(0);
            for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
                if (request instanceof RideShareWorkRequest){
                    Object[] row = new Object[7];
                    row[0] = ((RideShareWorkRequest) request).getCarListing();
                    row[1] = request.getReceiver();
                    row[2] = request;
                    String expectedPattern = "MM/dd/yyyy HH:mm:ss";
                    
                    SimpleDateFormat formatter = new SimpleDateFormat(expectedPattern);
                    Date userInput = ((RideShareWorkRequest) request).getCarHiredDate();    // MM/DD/YYYY
                    if(userInput != null){
                        String date = formatter.format(userInput);
                        row[3] = date;
                    } else {
                        row[3] = null;
                    }
                    
                    Date userInput2 = ((RideShareWorkRequest) request).getCarReturnedDate();    // MM/DD/YYYY
                    if(userInput2 != null){
                        String date2 = formatter.format(userInput2);
                        row[4] = date2;
                    } else{
                        row[4] = null;
                    }
                    
                    if (((RideShareWorkRequest) request).getCarHiredDate() != null && ((RideShareWorkRequest) request).getCarReturnedDate() != null ){
//                        int moneyEarned = (int) ((((RideShareWorkRequest) request).getCarListing().getCarRent()) * (((RideShareWorkRequest) request).calculateTimeDifference()));
                        row[5] = ((RideShareWorkRequest)request).getMoneyEarned();
                    } else {
                        row[5] = null;
                    }
                   
                    row[6] = Integer.toString(((RideShareWorkRequest) request).getGreenPoints());
                    model.addRow(row);
                }
                    
            }
    }
    
    public int totalMoney(){
        int totalMoney =0;
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if (request instanceof RideShareWorkRequest){
                totalMoney = totalMoney + ((RideShareWorkRequest)request).getMoneyEarned();
            }
        }
        return totalMoney;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableOwnerDashboard = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textTotalMoney = new javax.swing.JTextField();

        setBackground(new java.awt.Color(187, 222, 251));

        tableOwnerDashboard.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tableOwnerDashboard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Model", "Renter", "Status", "Hired On", "Returned On", "Money earned", "Green Points"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOwnerDashboard.setGridColor(new java.awt.Color(187, 222, 251));
        tableOwnerDashboard.setUpdateSelectionOnSort(false);
        tableOwnerDashboard.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tableOwnerDashboardFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tableOwnerDashboard);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Your Listings Dashboard:");

        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Total Money Earned: $");

        textTotalMoney.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textTotalMoney.setDisabledTextColor(new java.awt.Color(0, 51, 153));
        textTotalMoney.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 828, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textTotalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textTotalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableOwnerDashboardFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableOwnerDashboardFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tableOwnerDashboardFocusGained

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
//        CarOwnerWorkAreaJPanel cowjp = (CarOwnerWorkAreaJPanel) component;
//        cowjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableOwnerDashboard;
    private javax.swing.JTextField textTotalMoney;
    // End of variables declaration//GEN-END:variables
}
