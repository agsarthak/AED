/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CarOwnerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.CarOwnerOrganization;
import Business.Organization.EnvironmentOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EnvRewardsWorkRequest;
import Business.WorkQueue.EnvironmentWorkRequest;
import Business.WorkQueue.RideShareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sarthak
 */
public class CarOwnerEnvJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private CarOwnerOrganization organization;
    private Enterprise enterprise;

    public CarOwnerEnvJPanel(JPanel userProcessContainer, UserAccount userAccount, CarOwnerOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        populateTable();
        textGreenPts.setText(Integer.toString(totalGreenPts()));
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tableEnv.getModel();
        model.setRowCount(0);

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof EnvironmentWorkRequest) {
                Object[] row = new Object[4];
                row[0] = ((EnvironmentWorkRequest) request).getCarListing();

                String expectedPattern = "MM/dd/yyyy";
                SimpleDateFormat formatter = new SimpleDateFormat(expectedPattern);
                Date userInput = ((EnvironmentWorkRequest) request).getCarListing().getLastPollution();    // MM/DD/YYYY
                if (userInput != null) {
                    String date = formatter.format(userInput);
                    row[1] = date;
                } else {
                    row[1] = null;
                }

                row[2] = ((EnvironmentWorkRequest) request).getFine();

//                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                try {
                    Calendar c = Calendar.getInstance();
                    c.setTime(((EnvironmentWorkRequest) request).getCarListing().getLastPollution()); // Now use today date.
                    c.add(Calendar.DATE, 80); // Adding 90 days
                    String output = formatter.format(c.getTime());
                    Date date1 = formatter.parse(output);

                    Date todayDate = new Date();

                    if (todayDate.after(date1)) {
                        row[3] = "Pollution about to expire";
                        
                    } else {
                        row[3] = request;
                    }
                } catch (ParseException ex) {
                    ex.printStackTrace();
                }

                model.addRow(row);
            }
        }
    }

    public int totalGreenPts(){
        int totalGreenPts = 0;
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if (request instanceof RideShareWorkRequest){
                totalGreenPts = totalGreenPts + ((RideShareWorkRequest)request).getGreenPoints();
            }
        }
        return totalGreenPts;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableEnv = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textGreenPts = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textRewards = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnCheckRewards = new javax.swing.JButton();

        setBackground(new java.awt.Color(187, 222, 251));

        tableEnv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Model", "Last Pollution check", "Fine incurred", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableEnv);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Total Green Points collected:");

        textGreenPts.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textGreenPts.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Click below to see your rewards from Environmental Department : ");

        textRewards.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textRewards.setEnabled(false);

        btnCheckRewards.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        btnCheckRewards.setText("Check");
        btnCheckRewards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckRewardsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(textGreenPts, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCheckRewards, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textRewards, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(textGreenPts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRewards, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckRewards, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
//        CarOwnerListingJpanel carOwnerListingJpanel = (CarOwnerListingJpanel) component;
//        carOwnerListingJpanel.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCheckRewardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckRewardsActionPerformed
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            textRewards.setText(((EnvRewardsWorkRequest)request).getRewards()) ;
        }
    }//GEN-LAST:event_btnCheckRewardsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckRewards;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tableEnv;
    private javax.swing.JTextField textGreenPts;
    private javax.swing.JTextField textRewards;
    // End of variables declaration//GEN-END:variables
}
