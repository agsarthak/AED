/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import Business.Patient;
import Business.VitalSign;
import Business.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Sarthak
 */
public final class ViewVitalSign extends javax.swing.JPanel {
    private Patient patient ;
    private VitalSignHistory vitalSignHistory;

    
    public ViewVitalSign(Patient patient, VitalSignHistory vitalSignHistory) {
        initComponents();
        this.patient = patient;
        this.vitalSignHistory = vitalSignHistory;
        displayPatient(patient);
        populateTable();
    }
    

     
    public void displayPatient(Patient patient){
        patientNameTb.setText(patient.getPatientName());
        patientIdTb.setText(patient.getPatientId());
        ageTb.setText(Integer.toString(patient.getAge()));
        docNameTb.setText(patient.getPrimaryDocName());
        pharmacyTb.setText(patient.getPreferredPharmacy());
    }
    
    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)vitalSignTable.getModel(); 
        int rowCount = vitalSignTable.getRowCount();
        for(int i = rowCount - 1; i>=0; i--) {
            dtm.removeRow(i);
        }
        
        for(VitalSign vs : vitalSignHistory.getVitalSignList()) {
            Object row[] = new Object[2];
            row[0] = vs;
            row[1] = calculateStatus(vs) ;
            dtm.addRow(row);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner1 = new javax.swing.JLabel();
        patientNameLbl = new javax.swing.JLabel();
        patientIdLbl = new javax.swing.JLabel();
        ageLbl = new javax.swing.JLabel();
        DocLbl = new javax.swing.JLabel();
        pharmacyLbl = new javax.swing.JLabel();
        patientNameTb = new javax.swing.JTextField();
        patientIdTb = new javax.swing.JTextField();
        ageTb = new javax.swing.JTextField();
        docNameTb = new javax.swing.JTextField();
        pharmacyTb = new javax.swing.JTextField();
        banner2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        WeightTb = new javax.swing.JTextField();
        BpTb = new javax.swing.JTextField();
        DatenTimeTb = new javax.swing.JTextField();
        RespiratoryRateLbl = new javax.swing.JLabel();
        HeartRateLbl = new javax.swing.JLabel();
        BpLbl = new javax.swing.JLabel();
        WeightLbl = new javax.swing.JLabel();
        DatenTimeLbl = new javax.swing.JLabel();
        RespiratoryTb = new javax.swing.JTextField();
        HeartRateTb = new javax.swing.JTextField();

        banner1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        banner1.setText("Patient Information");

        patientNameLbl.setText("Patient Name");

        patientIdLbl.setText("Patient ID");

        ageLbl.setText("Age");

        DocLbl.setText("Primary Doctor Name");

        pharmacyLbl.setText("Preferred Pharmacy");

        patientNameTb.setEnabled(false);

        patientIdTb.setEnabled(false);

        ageTb.setEnabled(false);

        docNameTb.setEnabled(false);

        pharmacyTb.setEnabled(false);

        banner2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        banner2.setText("Patient Vital Signs");

        vitalSignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Vital Sign Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignTable);
        if (vitalSignTable.getColumnModel().getColumnCount() > 0) {
            vitalSignTable.getColumnModel().getColumn(0).setResizable(false);
            vitalSignTable.getColumnModel().getColumn(1).setResizable(false);
        }

        viewBtn.setText("View Details");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        RespiratoryRateLbl.setText("Respiratory Rate");

        HeartRateLbl.setText("Heart Rate");

        BpLbl.setText("Systolic Blood Pressure");

        WeightLbl.setText("Weight in Pounds");

        DatenTimeLbl.setText("Date and Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientNameLbl)
                    .addComponent(pharmacyLbl)
                    .addComponent(DocLbl)
                    .addComponent(ageLbl)
                    .addComponent(patientIdLbl))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pharmacyTb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addComponent(docNameTb, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ageTb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addComponent(patientIdTb, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(patientNameTb, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(74, 74, 74)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(banner1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(banner2)
                .addGap(214, 214, 214))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewBtn)
                        .addGap(54, 54, 54)
                        .addComponent(deleteBtn)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DatenTimeLbl)
                            .addComponent(WeightLbl)
                            .addComponent(BpLbl)
                            .addComponent(HeartRateLbl)
                            .addComponent(RespiratoryRateLbl))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(HeartRateTb, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RespiratoryTb)
                                .addComponent(DatenTimeTb, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BpTb))
                            .addComponent(WeightTb, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(banner1)
                    .addComponent(banner2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientNameLbl)
                            .addComponent(patientNameTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientIdLbl)
                            .addComponent(patientIdTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLbl)
                            .addComponent(ageTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DocLbl)
                            .addComponent(docNameTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pharmacyLbl)
                            .addComponent(pharmacyTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RespiratoryRateLbl)
                        .addGap(18, 18, 18)
                        .addComponent(HeartRateLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RespiratoryTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeartRateTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BpLbl)
                    .addComponent(BpTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WeightLbl)
                    .addComponent(WeightTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DatenTimeLbl)
                    .addComponent(DatenTimeTb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
       
        int selectedRow = vitalSignTable.getSelectedRow(); 
        if(selectedRow >=0) {                              
            VitalSign vs = (VitalSign)vitalSignTable.getValueAt(selectedRow, 0);
            RespiratoryTb.setText(String.valueOf(vs.getRespiratoryRate()));
            HeartRateTb.setText(String.valueOf(vs.getHeartRate()));
            BpTb.setText(String.valueOf(vs.getBp()));
            WeightTb.setText(String.valueOf(vs.getWeight()));
            DatenTimeTb.setText(String.valueOf(vs.getDate()));
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewBtnActionPerformed
  
    public void resetFields(){
        RespiratoryTb.setText("");
        HeartRateTb.setText("");
        BpTb.setText("");
        WeightTb.setText("");
        DatenTimeTb.setText("");
    }
  
  
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = vitalSignTable.getSelectedRow();
        if(selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete Vital Sign?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION) {
                VitalSign vs = (VitalSign)vitalSignTable.getValueAt(selectedRow, 0);
                vitalSignHistory.deleteVitalSign(vs);
                populateTable();
                resetFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BpLbl;
    private javax.swing.JTextField BpTb;
    private javax.swing.JLabel DatenTimeLbl;
    private javax.swing.JTextField DatenTimeTb;
    private javax.swing.JLabel DocLbl;
    private javax.swing.JLabel HeartRateLbl;
    private javax.swing.JTextField HeartRateTb;
    private javax.swing.JLabel RespiratoryRateLbl;
    private javax.swing.JTextField RespiratoryTb;
    private javax.swing.JLabel WeightLbl;
    private javax.swing.JTextField WeightTb;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTb;
    private javax.swing.JLabel banner1;
    private javax.swing.JLabel banner2;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField docNameTb;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel patientIdLbl;
    private javax.swing.JTextField patientIdTb;
    private javax.swing.JLabel patientNameLbl;
    private javax.swing.JTextField patientNameTb;
    private javax.swing.JLabel pharmacyLbl;
    private javax.swing.JTextField pharmacyTb;
    private javax.swing.JButton viewBtn;
    private javax.swing.JTable vitalSignTable;
    // End of variables declaration//GEN-END:variables


public String calculateStatus (VitalSign vitalSign){
    String status = "Please enter valid patient details";
        if (patient.getAge() >= 1 && patient.getAge() <= 3 )
        { 
            if (
             vitalSign.getRespiratoryRate() >=20 && vitalSign.getRespiratoryRate() <=30
            &&  vitalSign.getHeartRate() >=80 && vitalSign.getHeartRate() <= 130       
            &&  vitalSign.getBp()>=80 && vitalSign.getBp() <=110
            &&  vitalSign.getWeight() >= 22 && vitalSign.getWeight() <= 31    
                     )
                    {
                    status ="Normal";
                    }
            else {
                status ="Abnormal";
                 }
        }
        
        if (patient.getAge() >= 4 && patient.getAge() <= 5 )
        { 
            if (
             vitalSign.getRespiratoryRate() >=20 && vitalSign.getRespiratoryRate() <=30
            &&  vitalSign.getHeartRate() >=80 && vitalSign.getHeartRate() <= 120       
            &&  vitalSign.getBp()>=80 && vitalSign.getBp() <=110
            &&  vitalSign.getWeight() >= 31 && vitalSign.getWeight() <= 40
                     )
                    {
                    status ="Normal";
                    }
            else {
                status ="Abnormal";
                 }
        }
        if (patient.getAge() >= 6 && patient.getAge() <= 12 )
        { 
            if (
             vitalSign.getRespiratoryRate() >=20 && vitalSign.getRespiratoryRate() <=30
            &&  vitalSign.getHeartRate() >=70 && vitalSign.getHeartRate() <= 110
            &&  vitalSign.getBp()>=80 && vitalSign.getBp() <=120
            &&  vitalSign.getWeight() >= 41 && vitalSign.getWeight() <= 92   
                     )
                    {
                    status ="Normal";
                    }
            else {
                status ="Abnormal";
                 }
        }
        if (patient.getAge() >= 13 )
        { 
            if (
             vitalSign.getRespiratoryRate() >=12 && vitalSign.getRespiratoryRate() <=20
            &&  vitalSign.getHeartRate() >=55 && vitalSign.getHeartRate() <= 105
            &&  vitalSign.getBp()>=110 && vitalSign.getBp() <=120
            &&  vitalSign.getWeight() >= 110  
                     )
                    {
                    status ="Normal";
                    }
            else {
                status ="Abnormal";
                 }
        }
            return status;
}     
}